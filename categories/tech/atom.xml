<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tech | Hey, Iâ€™m Parker.]]></title>
  <link href="http://blog.parkermoore.de/categories/tech/atom.xml" rel="self"/>
  <link href="http://blog.parkermoore.de/"/>
  <updated>2014-08-01T23:48:13-04:00</updated>
  <id>http://blog.parkermoore.de/</id>
  <author>
    <name><![CDATA[Parker Moore]]></name>
    <email><![CDATA[parkrmoore@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Header Anchor Links in Vanilla JavaScript for GitHub Pages and Jekyll]]></title>
    <link href="http://blog.parkermoore.de/2014/08/01/header-anchor-links-in-vanilla-javascript-for-github-pages-and-jekyll/"/>
    <updated>2014-08-01T23:36:54-04:00</updated>
    <id>http://blog.parkermoore.de/2014/08/01/header-anchor-links-in-vanilla-javascript-for-github-pages-and-jekyll</id>
    <content type="html"><![CDATA[<p>The venerable <a href="http://ben.balter.com">Ben Balter, Esq.</a> wrote earlier this year about <a href="http://ben.balter.com/2014/03/13/pages-anchor-links/">how to add anchor links for headers in Jekyll.</a>. I thought I&#39;d follow up that post with one of my own, as I take a slightly different approach.</p>

<p>This solution is vanilla JavaScript with a little CSS and the Font Awesome web font.</p>

<h2>Font Awesome</h2>

<p><a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a> is, well, awesome. It&#39;s a font of icons that comes with a handy set of CSS classes.</p>

<p>Download the Font Awesome distribution and pull out just the font files. They&#39;re the files that end in <code>.ttf</code>, <code>.woff</code>, <code>.svg</code>, <code>.otf</code>, and <code>.eot</code>. Grab them all and put them in <code>fonts/</code> in your Jekyll site.</p>

<h2>The JavaScript</h2>

<p>Add this JavaScript wherever is convenient:</p>

<p><div class="highlight"><pre><code class="js"><span class="kd">var</span> <span class="nx">anchorForId</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">anchor</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;);</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">header</span><span class="o">-</span><span class="nx">link</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;;</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">href</span>      <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="err">#</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span> <span class="o">+</span> <span class="nx">id</span><span class="p">;</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">i</span> <span class="kr">class</span><span class="o">=</span><span class="err">\</span><span class="s2">"fa fa-link\"&gt;&lt;/i&gt;&amp;quot;;
  return anchor;
};&lt;/p&gt;

&lt;p&gt;var linkifyAnchors = function (level, containingElement) {
  var headers = containingElement.getElementsByTagName(&amp;quot;h&amp;quot; + level);
  for (var h = 0; h &amp;lt; headers.length; h++) {
    var header = headers[h];&lt;/p&gt;
&lt;div class="</span><span class="nx">highlight</span><span class="s2">"&gt;&lt;pre&gt;&lt;code class="</span><span class="nx">language</span><span class="o">-</span><span class="s2">" data-lang=""&gt;if (typeof header.id !== "</span><span class="kc">undefined</span><span class="s2">" &amp;amp;&amp;amp; header.id !== "</span><span class="err">"</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">header</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">anchorForId</span><span class="p">(</span><span class="nx">header</span><span class="p">.</span><span class="nx">id</span><span class="p">));</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
<span class="p">};</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nb">document</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">complete</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">contentBlock</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">docs</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">news</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">contentBlock</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">level</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">level</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">6</span><span class="p">;</span> <span class="nx">level</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">linkifyAnchors</span><span class="p">(</span><span class="nx">level</span><span class="p">,</span> <span class="nx">contentBlock</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">};</span></code></pre></div></p>

<h2>The CSS</h2>

<p>Last, add this CSS to the <code>css</code> or <code>_scss</code> folder:</p>

<p><div class="highlight"><pre><code class="css"><span class="o">/&lt;</span><span class="nt">em</span><span class="o">&gt;!</span>
 <span class="o">*</span>  <span class="nt">Font</span> <span class="nt">Awesome</span> <span class="nt">4</span><span class="nc">.1.0</span> <span class="nt">by</span> <span class="k">@davegandy</span> <span class="n">-</span> <span class="n">http</span><span class="p">://</span><span class="n">fontawesome</span><span class="p">.</span><span class="n">io</span> <span class="n">-</span> <span class="err">@</span><span class="n">fontawesome</span>
 <span class="err">*</span>  <span class="n">License</span> <span class="n">-</span> <span class="n">http</span><span class="p">://</span><span class="n">fontawesome</span><span class="p">.</span><span class="n">io</span><span class="p">/</span><span class="n">license</span> <span class="p">(</span><span class="n">Font</span><span class="p">:</span> <span class="n">SIL</span> <span class="n">OFL</span> <span class="m">1.1</span><span class="p">,</span> <span class="n">CSS</span><span class="p">:</span> <span class="n">MIT</span> <span class="n">License</span><span class="p">)</span>
 <span class="err">*</span><span class="p">/</span>
<span class="err">@</span><span class="n">font-face</span> <span class="p">{</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="err">&amp;</span><span class="m">#39</span><span class="p">;</span><span class="err">FontAwesome&amp;#39;;</span>
  <span class="nl">src</span><span class="p">:</span> <span class="sx">url(&amp;#39;../fonts/fontawesome-webfont.eot?v=4.1.0&amp;#39;)</span><span class="p">;</span>
  <span class="nl">src</span><span class="p">:</span> <span class="sx">url(&amp;#39;../fonts/fontawesome-webfont.eot?#iefix&amp;amp;v=4.1.0&amp;#39;)</span> <span class="n">format</span><span class="p">(</span><span class="err">&amp;</span><span class="m">#39</span><span class="p">;</span><span class="err">embedded-opentype&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.woff?v=4.1.0&amp;#39;)</span> <span class="err">format(&amp;#39;woff&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.ttf?v=4.1.0&amp;#39;)</span> <span class="err">format(&amp;#39;truetype&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.svg?v=4.1.0#fontawesomeregular&amp;#39;)</span> <span class="err">format(&amp;#39;svg&amp;#39;);</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">font-style</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.fa</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="n">FontAwesome</span><span class="p">;</span>
  <span class="nl">font-style</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">line-height</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
  <span class="nl">-webkit-font-smoothing</span><span class="p">:</span> <span class="n">antialiased</span><span class="p">;</span>
  <span class="nl">-moz-osx-font-smoothing</span><span class="p">:</span> <span class="n">grayscale</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.fa-link</span><span class="nd">:before</span> <span class="p">{</span>
  <span class="nl">content</span><span class="p">:</span> <span class="err">&amp;</span><span class="n">quot</span><span class="p">;</span><span class="err">\f0c1&amp;quot;;</span>
<span class="p">}</span>
<span class="o">/&lt;/</span><span class="nt">em</span><span class="o">&gt;</span>
 <span class="o">*</span> <span class="nt">This</span> <span class="nt">code</span> <span class="nt">is</span> <span class="nt">courtesy</span> <span class="nt">Ben</span> <span class="nt">Balter</span><span class="o">,</span> <span class="nt">modified</span> <span class="nt">by</span> <span class="nt">Parker</span> <span class="nt">Moore</span> <span class="nt">for</span> <span class="nt">jekyllrb</span><span class="nc">.com</span>
 <span class="o">*</span> <span class="nt">http</span><span class="o">://</span><span class="nt">ben</span><span class="nc">.balter.com</span><span class="o">/</span><span class="nt">2014</span><span class="o">/</span><span class="nt">03</span><span class="o">/</span><span class="nt">13</span><span class="o">/</span><span class="nt">pages-anchor-links</span><span class="o">/</span>
 <span class="o">*/</span>
<span class="nc">.header-link</span> <span class="p">{</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">left</span><span class="p">:</span> <span class="m">0.5em</span><span class="p">;</span>
  <span class="nl">opacity</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.8em</span><span class="p">;</span><span class="err">&lt;/p&gt;</span>

<span class="err">&lt;p&gt;</span><span class="nl">-webkit-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
  <span class="nl">-moz-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
  <span class="nl">-ms-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">h2</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h3</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h4</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h5</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h6</span><span class="nd">:hover</span> <span class="nc">.header-link</span> <span class="p">{</span>
  <span class="nl">opacity</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
<span class="p">}</span></code></pre></div></p>

<h2>Enjoy the Magic</h2>

<p>Now refresh your site and voilÃ ! It&#39;s like magic. See it in action in the <a href="http://jekyllrb.com/docs/home/">Jekyll docs</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Hacker's Guide to Her Own GitHub Pages]]></title>
    <link href="http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages/"/>
    <updated>2014-08-01T14:42:58-04:00</updated>
    <id>http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages</id>
    <content type="html"><![CDATA[<p><a href="https://pages.github.com">GitHub Pages</a> is a wonderful free platform GitHub has created to build and host your Jekyll sites for you. You push up any valid Jekyll site to a repo (on a special branch), and it&#39;s built and published to a predictable URL. The only downside? You can&#39;t use any custom Ruby code, which means no custom plugins. So what&#39;s the best way to host a Jekyll site that requires plugins?</p>

<p>Maybe you&#39;re writing a huge website for your employer, or just something small for yourself. Either way, you need a plugin or two to get it <em>just right</em>. You could build locally and push the compiled site up to GitHub Pages, but that requires that you install all the dependencies locally and write a script to compile and jostle things in just the right way to make it all work. What if you could have the same workflow â€“ just <code>git push</code> â€“ for sites with custom plugins?</p>

<p>You can. I do it every day. In fact, my personal site (https://parkermoo.re) is published with this method. Here&#39;s a step-by-step guide to making your own GitHub Pages.</p>

<h2>1. Install and Configure Dependencies</h2>

<p>You&#39;ll need the following:</p>

<ol>
<li>A server with <code>root</code> access. I use a Rackspace CentOS 1GB Performance VM, but you can use any Linux system from any provider.</li>
<li>A web server if you don&#39;t have one already (Apache/Nginx).</li>
<li>Ruby and RubyGems with the proper permissions to install new gems.</li>
<li>Git</li>
<li><a href="https://github.com/sitaramc/gitolite">Gitolite</a></li>
</ol>

<p>First, <code>sudo su - root</code>. Then install Ruby. I suggest using <code>rbenv</code> to keep your Rubies organized. Then ensure RubyGems is installed, and install the <code>github-pages</code> gem.</p>

<p>Next, ensure you have a daemonized web server installed, like <code>nginx</code> or <code>apache</code>.</p>

<p>Then ensure git is installed and create a new <code>git</code> user. Run <code>su - git</code> and install <code>gitolite</code>.</p>

<p>Once you have <code>gitolite</code> installed, go back to your local machine and configure <code>gitolite</code> as described. You&#39;ll need to add a new user for your SSH key and create the repo for your site.</p>

<h2>2. Add the post-receive hook</h2>

<p>Run <code>sudo su - git</code> and find the <code>post-receive</code> file in your repository. It&#39;s usually at <code>/home/git/repositories/MY_REPO.git/hooks/post-receive</code>. Edit it so it looks like this:</p>

<p><div class="highlight"><pre><code class="bash"><span class="nb">set</span> -e <span class="c"># fail on error&lt;/p&gt;</span>

&lt;h1&gt;ensure you have loaded git&amp;#39;s environment with rbenv/ruby/jekyll <span class="k">in </span>the path&lt;/h1&gt;

&lt;p&gt;source /home/git/.bash_profile&lt;/p&gt;

&lt;h1&gt;this is only <span class="k">if </span>you have rbenv installed&lt;/h1&gt;

&lt;h1&gt;remove <span class="k">if </span>you&amp;#39;re using a stock ruby&lt;/h1&gt;

&lt;p&gt;eval &amp;quot;<span class="k">$(</span>rbenv init -<span class="k">)</span>&amp;quot;&lt;/p&gt;

&lt;h1&gt;this shows you where the Jekyll executable can be found&lt;/h1&gt;

&lt;h1&gt;it will also fail <span class="k">if </span>jekyll can&amp;#39;t be found, halting the build.&lt;/h1&gt;

&lt;p&gt;which jekyll&lt;/p&gt;

&lt;h1&gt;this is the name of your repo, without the &lt;code&gt;.git&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;REPO&lt;em&gt;NAME<span class="o">=</span>&amp;quot;MY&lt;/em&gt;REPO&amp;quot;&lt;/p&gt;

&lt;p&gt;GIT&lt;em&gt;REPO<span class="o">=</span><span class="nv">$HOME</span>/repositories/<span class="nv">$REPO</span>&lt;/em&gt;NAME.git
TMP&lt;em&gt;GIT&lt;/em&gt;CLONE<span class="o">=</span>/tmp/<span class="nv">$REPO_NAME</span>&lt;/p&gt;

&lt;h1&gt;Change this to wherever your server <span class="o">(</span>nginx/apache<span class="o">)</span> will look&lt;/h1&gt;

&lt;h1&gt;for your compiled site. Usually called the document root.&lt;/h1&gt;

&lt;p&gt;PUBLIC&lt;em&gt;WWW<span class="o">=</span>/var/www/<span class="nv">$REPO</span>&lt;/em&gt;NAME&lt;/p&gt;

&lt;p&gt;git clone <span class="nv">$GIT</span>&lt;em&gt;REPO <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE&lt;/p&gt;

&lt;h1&gt;Run Jekyll!&lt;/h1&gt;

&lt;p&gt;cd <span class="nv">$TMP</span>&lt;em&gt;GIT&lt;/em&gt;CLONE &amp;amp;&amp;amp; jekyll build -d <span class="nv">$PUBLIC</span>&lt;em&gt;WWW --trace
rm -Rf <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE
<span class="nb">exit</span></code></pre></div></p>

<p>This hook will clone your repo to <code>/tmp</code> and run <code>jekyll build</code> from your site source into the directory your server will serve from.</p>

<h2>3. Add the git remote</h2>

<p>Go back to your local site and add the remote:</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git remote add publish git@example.org:MY_REPO.git</code></pre></div></p>

<h2>4. Test</h2>

<p>Now, to test, just push!</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git push publish master</code></pre></div></p>

<p>You should see all the output of the Jekyll process in your terminal. Once you see <code>...done.</code> and the process exits, you&#39;re done! Refresh your browser and admire your handiwork.</p>

<p>If you get a <code>LoadError</code> from Jekyll, then you don&#39;t have a gem installed or it can&#39;t access the <code>_plugins</code> directory. To install new gems, just run <code>gem install GEM_NAME</code> as <code>root</code> on your VM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Donâ€™t Like Being Tracked?]]></title>
    <link href="http://blog.parkermoore.de/2014/07/16/dont-like-being-tracked/"/>
    <updated>2014-07-16T21:58:53-04:00</updated>
    <id>http://blog.parkermoore.de/2014/07/16/dont-like-being-tracked</id>
    <content type="html"><![CDATA[<p>I donâ€™t like being tracked by Web giants when Iâ€™m not on their websites. As
more sites integrate Twitter, Facebook, and Google support, I canâ€™t help
but be tracked on almost every site I visit.</p>

<p>Luckily, the integrations for these three aforementioned companies is quite
simple to subvert (at least partially). If youâ€™re running a unix-based
machine, you can add just a few lines to your <code>/etc/hosts</code> file (on Windows 
itâ€™s <code>C:\Windows\System32\drivers\etc\hosts</code>) and youâ€™re well on your way to
Web privacy.</p>

<p>Open up a new tab, and open the Developer Console. Open the Network tab.
Now navigate to your favourite blog, news site, etc. Youâ€™ll see each
individual network request that is made from that page listed in the
Network pane of the Developer Console. Scroll through requests and make
note of the domain names you wish to block.</p>

<p>Once you have the list of domain names, simply use your <code>hosts</code> file to
reroute those domains to your local server (<code>127.0.0.1</code>). Hereâ€™s an example:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">127.0.0.1     connect.facebook.net
127.0.0.1     google-analytics.com www.google-analytics.com
127.0.0.1     platform.twitter.com
127.0.0.1     adroll.com a.adroll.com d.adroll.com
127.0.0.1     ib.adnxs.com
127.0.0.1     googleadservices.com www.googleadservices.com
</code></pre></div>
<p>In this example, Iâ€™ve blocked Facebook, Google Analytics, Twitter, Ad Roll,
Google Ad Services and the unknown &quot;adnxs&quot; service.</p>

<p>Preface each domain name with the address of your local server <code>127.0.0.1</code>
and group each line based on the second-level domain (e.g. <code>adroll.com</code>).
Add each of these lines to your <code>/etc/hosts</code> file (note: this will require
root privileges). Donâ€™t forget to save it when youâ€™re done.</p>

<p>Now navigate to that same site again, with the Network pane still open. You
should now get 404â€™s or 500â€™s when you try to access those same domains you
â€˜blockedâ€™.</p>

<p>For a solution that doesnâ€™t require halting access to these hosts, check
out the Tor project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Always Moving Forward]]></title>
    <link href="http://blog.parkermoore.de/2014/04/03/always-moving-forward/"/>
    <updated>2014-04-03T16:28:07-04:00</updated>
    <id>http://blog.parkermoore.de/2014/04/03/always-moving-forward</id>
    <content type="html"><![CDATA[<p><a href="https://parker.vsco.co"><img src="http://image.vsco.co/1/51c771649686d3572/52d5e979726708dc7c00040f/1024x768/vsco_011414_24.jpg" alt="Emeryville California"></a></p>

<p>Today, I&#39;m proud to announce that I have accepted a job offer from <a href="https://vsco.co/">Visual Supply Co</a>,
a small and happenin&#39; start-up based in the Bay Area. Visual Supply Co,
also known as VSCO, produces the well-loved <a href="https://vsco.co/vscocam">VSCO Cam</a> iPhone
and Android apps, as well as <a href="https://vsco.co/film">VSCO Film</a>, <a href="https://grid.vsco.co">VSCO Grid</a>, and <a href="https://vsco.co/vscokeys">VSCO Keys</a>.
I&#39;ll be working on all things web, including the Grid service and the API.</p>

<p>Super stoked to begin this next chapter in my journey through life working
on a slick series of products with a stellar team. Follow my adventure on
<a href="https://parker.vsco.co">my grid</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Command-T with OS X Maverick's Built-In Vim]]></title>
    <link href="http://blog.parkermoore.de/2014/01/02/installing-command-t-with-os-x-mavericks-built-in-vim/"/>
    <updated>2014-01-02T01:03:00-05:00</updated>
    <id>http://blog.parkermoore.de/2014/01/02/installing-command-t-with-os-x-mavericks-built-in-vim</id>
    <content type="html"><![CDATA[<p>I was fortunate enough to, just today, pick up a new computer. My first hardware
in over 4 years, I had been holding off. Once my trusty MacBook Pro bit the dust
last night and I found out the repair cost was extraordinary, I bit the bullet.</p>

<p>So, you&#39;re probably in a similar place. You relatively recently got a shiny new
Macintosh and you&#39;re so excited to start writing code and making a difference
with those skillz of yours. Except one this is missing: <a href="https://github.com/wincent/Command-T">Command-T</a>.</p>

<p>Lucky for you, sir, I am here to help. OS X Maverick&#39;s built-in vim distribution
comes with Ruby support already (which it needs for Command-T) so you&#39;re good
there. Now you need to download and compile Command-T. Should be easy, right?
Well, not quite.</p>

<p>Mavericks was notable for Ruby users because it ships with Ruby 2.0. All
previous versions that I had ever used shipped with 1.8.7 so this was a huge
bonus. Problem is, your pre-installed vim wasn&#39;t compiled with 2.0.0, it was
compiled with 1.8.7.</p>

<p>To check this, run the following in vim in NORMAL mode:</p>
<div class="highlight"><pre><code class="language-text" data-lang="text">:ruby puts "#{RUBY_VERSION}-p#{RUBY_PATCHLEVEL}"
</code></pre></div>
<p>For me, that output <code>1.8.7-p358</code>. So that means the Ruby verison that vim is
using is <code>1.8.7-p358</code>, and we need to compile Command-T with that version. To do
so, install it:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="gp">$ </span>rbenv install 1.8.7-p358
</code></pre></div>
<p>Boom! Now download and install Command-T:</p>
<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="gp">$ </span>git clone https://github.com/wincent/Command-T.git ~/.vim/bundle/Command-T
<span class="gp">$ </span><span class="nb">cd</span> ~/.vim/bundle/Command-T <span class="c"># for tpope's Pathogen</span>
<span class="gp">$ </span>rbenv <span class="nb">local </span>1.8.7-p358
<span class="gp">$ </span>rbenv rehash
<span class="gp">$ </span>gem install bundler
<span class="gp">$ </span>bundle install
<span class="gp">$ </span>bundle <span class="nb">exec </span>rake make
</code></pre></div>
<p>Aaaaand boom, you&#39;re done. Open up <code>vim</code> and type your leaderkey then <code>t</code> (for
me, that&#39;s <code>,t</code>) to launch the prompt.</p>

<p>If you get a weird SIGTERM error when you launch <code>vim</code>, then you installed
Command-T with the wrong Ruby version. Remove <code>ruby/command-t/ext.bundle</code> and
try again.</p>
]]></content>
  </entry>
  
</feed>
