<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Hey, I’m Parker.]]></title>
  <link href="http://blog.parkermoore.de/categories/github/atom.xml" rel="self"/>
  <link href="http://blog.parkermoore.de/"/>
  <updated>2014-08-01T23:48:13-04:00</updated>
  <id>http://blog.parkermoore.de/</id>
  <author>
    <name><![CDATA[Parker Moore]]></name>
    <email><![CDATA[parkrmoore@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Hacker's Guide to Her Own GitHub Pages]]></title>
    <link href="http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages/"/>
    <updated>2014-08-01T14:42:58-04:00</updated>
    <id>http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages</id>
    <content type="html"><![CDATA[<p><a href="https://pages.github.com">GitHub Pages</a> is a wonderful free platform GitHub has created to build and host your Jekyll sites for you. You push up any valid Jekyll site to a repo (on a special branch), and it&#39;s built and published to a predictable URL. The only downside? You can&#39;t use any custom Ruby code, which means no custom plugins. So what&#39;s the best way to host a Jekyll site that requires plugins?</p>

<p>Maybe you&#39;re writing a huge website for your employer, or just something small for yourself. Either way, you need a plugin or two to get it <em>just right</em>. You could build locally and push the compiled site up to GitHub Pages, but that requires that you install all the dependencies locally and write a script to compile and jostle things in just the right way to make it all work. What if you could have the same workflow – just <code>git push</code> – for sites with custom plugins?</p>

<p>You can. I do it every day. In fact, my personal site (https://parkermoo.re) is published with this method. Here&#39;s a step-by-step guide to making your own GitHub Pages.</p>

<h2>1. Install and Configure Dependencies</h2>

<p>You&#39;ll need the following:</p>

<ol>
<li>A server with <code>root</code> access. I use a Rackspace CentOS 1GB Performance VM, but you can use any Linux system from any provider.</li>
<li>A web server if you don&#39;t have one already (Apache/Nginx).</li>
<li>Ruby and RubyGems with the proper permissions to install new gems.</li>
<li>Git</li>
<li><a href="https://github.com/sitaramc/gitolite">Gitolite</a></li>
</ol>

<p>First, <code>sudo su - root</code>. Then install Ruby. I suggest using <code>rbenv</code> to keep your Rubies organized. Then ensure RubyGems is installed, and install the <code>github-pages</code> gem.</p>

<p>Next, ensure you have a daemonized web server installed, like <code>nginx</code> or <code>apache</code>.</p>

<p>Then ensure git is installed and create a new <code>git</code> user. Run <code>su - git</code> and install <code>gitolite</code>.</p>

<p>Once you have <code>gitolite</code> installed, go back to your local machine and configure <code>gitolite</code> as described. You&#39;ll need to add a new user for your SSH key and create the repo for your site.</p>

<h2>2. Add the post-receive hook</h2>

<p>Run <code>sudo su - git</code> and find the <code>post-receive</code> file in your repository. It&#39;s usually at <code>/home/git/repositories/MY_REPO.git/hooks/post-receive</code>. Edit it so it looks like this:</p>

<p><div class="highlight"><pre><code class="bash"><span class="nb">set</span> -e <span class="c"># fail on error&lt;/p&gt;</span>

&lt;h1&gt;ensure you have loaded git&amp;#39;s environment with rbenv/ruby/jekyll <span class="k">in </span>the path&lt;/h1&gt;

&lt;p&gt;source /home/git/.bash_profile&lt;/p&gt;

&lt;h1&gt;this is only <span class="k">if </span>you have rbenv installed&lt;/h1&gt;

&lt;h1&gt;remove <span class="k">if </span>you&amp;#39;re using a stock ruby&lt;/h1&gt;

&lt;p&gt;eval &amp;quot;<span class="k">$(</span>rbenv init -<span class="k">)</span>&amp;quot;&lt;/p&gt;

&lt;h1&gt;this shows you where the Jekyll executable can be found&lt;/h1&gt;

&lt;h1&gt;it will also fail <span class="k">if </span>jekyll can&amp;#39;t be found, halting the build.&lt;/h1&gt;

&lt;p&gt;which jekyll&lt;/p&gt;

&lt;h1&gt;this is the name of your repo, without the &lt;code&gt;.git&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;REPO&lt;em&gt;NAME<span class="o">=</span>&amp;quot;MY&lt;/em&gt;REPO&amp;quot;&lt;/p&gt;

&lt;p&gt;GIT&lt;em&gt;REPO<span class="o">=</span><span class="nv">$HOME</span>/repositories/<span class="nv">$REPO</span>&lt;/em&gt;NAME.git
TMP&lt;em&gt;GIT&lt;/em&gt;CLONE<span class="o">=</span>/tmp/<span class="nv">$REPO_NAME</span>&lt;/p&gt;

&lt;h1&gt;Change this to wherever your server <span class="o">(</span>nginx/apache<span class="o">)</span> will look&lt;/h1&gt;

&lt;h1&gt;for your compiled site. Usually called the document root.&lt;/h1&gt;

&lt;p&gt;PUBLIC&lt;em&gt;WWW<span class="o">=</span>/var/www/<span class="nv">$REPO</span>&lt;/em&gt;NAME&lt;/p&gt;

&lt;p&gt;git clone <span class="nv">$GIT</span>&lt;em&gt;REPO <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE&lt;/p&gt;

&lt;h1&gt;Run Jekyll!&lt;/h1&gt;

&lt;p&gt;cd <span class="nv">$TMP</span>&lt;em&gt;GIT&lt;/em&gt;CLONE &amp;amp;&amp;amp; jekyll build -d <span class="nv">$PUBLIC</span>&lt;em&gt;WWW --trace
rm -Rf <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE
<span class="nb">exit</span></code></pre></div></p>

<p>This hook will clone your repo to <code>/tmp</code> and run <code>jekyll build</code> from your site source into the directory your server will serve from.</p>

<h2>3. Add the git remote</h2>

<p>Go back to your local site and add the remote:</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git remote add publish git@example.org:MY_REPO.git</code></pre></div></p>

<h2>4. Test</h2>

<p>Now, to test, just push!</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git push publish master</code></pre></div></p>

<p>You should see all the output of the Jekyll process in your terminal. Once you see <code>...done.</code> and the process exits, you&#39;re done! Refresh your browser and admire your handiwork.</p>

<p>If you get a <code>LoadError</code> from Jekyll, then you don&#39;t have a gem installed or it can&#39;t access the <code>_plugins</code> directory. To install new gems, just run <code>gem install GEM_NAME</code> as <code>root</code> on your VM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Immediate Future of Jekyll]]></title>
    <link href="http://blog.parkermoore.de/2012/12/18/the-immediate-future-of-jekyll/"/>
    <updated>2012-12-18T18:33:00-05:00</updated>
    <id>http://blog.parkermoore.de/2012/12/18/the-immediate-future-of-jekyll</id>
    <content type="html"><![CDATA[<p><a href="http://github.com/mojombo/jekyll">Jekyll</a> is a static blog generator created by <a href="https://github.com/mojombo">Tom Preston-Werner</a>, the
current CEO of <a href="https://github.com">GitHub</a> and one of GitHub&#39;s co-founders, and by <a href="https://github.com/qrush">Nick Quaranto</a>,
who is now at 37signals. Jekyll is <a href="https://github.com/mojombo/jekyll/wiki/Sites">pretty freakin&#39; popular</a> and it&#39;s
also the engine that drives <a href="http://pages.github.com/">GitHub Pages</a>.</p>

<p>After an hour-long chat with Tom, I&#39;m optimistic about the future of Jekyll. He&#39;s
really excited about where it&#39;s headed and has a vision in mind about what he&#39;d
like it to become.
Here&#39;s what we ironed out during our conversation:</p>

<p>Led by Tom, a Jekyll development team, of which I&#39;m the first recruit, will
be tackling the problems with Jekyll and continuously improving its functionality
and ease-of-use. The focus will remain on making a tool that allows one to easily
create and manage a static blog.</p>

<p>Suuuper basic (unofficial) design principles:</p>

<ol>
<li>Keep it simple</li>
<li>Easy to extend</li>
<li>Solid safe mode (for GitHub Pages)</li>
</ol>

<p>What we need to tackle:</p>

<ol>
<li>Fix bugs (!!)</li>
<li>Decrease build time (!!)</li>
<li>Docs for site</li>
<li>TomDoc everything</li>
<li>Release new site</li>
<li>Finish same site generator</li>
<li>Include some faster LSI</li>
</ol>

<p>Want to help? Check out the <a href="http://git.io/jekyll-discussion">discussion label</a> and add in your two cents.<br>
Want to contribute code? Check out the <a href="https://github.com/mojombo/jekyll/issues">issues</a> and submit a pull request with
a fix.</p>

<p>I&#39;m really excited about the immediate future of Jekyll and what it will become
in the next 6 months or so and the dev team takes on the issues outlined above.
I hope you&#39;re as excited as we are to get this project back on its feet.</p>

<p>If you want to chat more or have any questions, you know <a href="http://twitter.com/parkr">where to find me</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Open Letter to Tom Preston-Werner]]></title>
    <link href="http://blog.parkermoore.de/2012/12/11/an-open-letter-to-tom-preston-werner/"/>
    <updated>2012-12-11T17:03:00-05:00</updated>
    <id>http://blog.parkermoore.de/2012/12/11/an-open-letter-to-tom-preston-werner</id>
    <content type="html"><![CDATA[<p>I&#39;m a huge advocate of static site generators and have always favoured <a href="https://github.com/mojombo/jekyll">Jekyll</a> as my go-to static site generator.</p>

<p>Unfortunately, it&#39;s fallen out of active development. I&#39;ve been trying to contact Tom Preston-Werner (<a href="https://github.com/mojombo">@mojombo</a>) about it, but so far: nothing. (To be fair, I have gotten two replies, but they were not productive other than saying that he was looking for new maintainers. That was May 2012.)</p>

<p>So here&#39;s my open letter to you, Tom, about saving   Jekyll from open-source oblivion.</p>

<blockquote>
<p>Tom,</p>

<p>Hope you had a pleasant weekend.</p>

<p>Here&#39;s what I wish to see happen with Jekyll:</p>

<ol>
<li>Start an Org on Github and move the Jekyll repo to that org</li>
<li>Add several maintainers to that org (I&#39;d be happy to help out as a maintainer!)</li>
<li>Add another author or two to the Jekyll gem so that we can gem push and release new versions.</li>
<li>Give at least one other person access to push to the source of jekyllrb.com so that the docs can be updated</li>
</ol>

<p>Problem I&#39;m trying to solve:</p>

<blockquote>
<p>Jekyll is incredibly popular and is an incredibly powerful tool, but is not being actively maintained centrally, so though the world around it is evolving, it is staying stagnant and plagued by the same issues it has been for the last four years.</p>
</blockquote>

<p>Solution:</p>

<blockquote>
<p>Add maintainers to Jekyll to help deal with issues, push new versions, and update the documentation when you don&#39;t have the time.</p>
</blockquote>

<p>The great thing about version control systems is that changes can always be reverted.</p>

<p>Thanks in advance for your attention to this problem and willingness to help it continue growing.</p>

<p>Warm Regards,<br>
Parker Moore</p>
</blockquote>
]]></content>
  </entry>
  
</feed>
