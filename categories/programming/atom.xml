<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | Hey, I’m Parker.]]></title>
  <link href="http://blog.parkermoore.de/categories/programming/atom.xml" rel="self"/>
  <link href="http://blog.parkermoore.de/"/>
  <updated>2014-08-01T23:48:13-04:00</updated>
  <id>http://blog.parkermoore.de/</id>
  <author>
    <name><![CDATA[Parker Moore]]></name>
    <email><![CDATA[parkrmoore@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dealing with Distraction]]></title>
    <link href="http://blog.parkermoore.de/2013/05/30/dealing-with-distraction/"/>
    <updated>2013-05-30T15:56:00-04:00</updated>
    <id>http://blog.parkermoore.de/2013/05/30/dealing-with-distraction</id>
    <content type="html"><![CDATA[<p>Dealing with distraction for those of us who live with AD(H)D is a constant struggle, and
can be especially difficult for those of us who must daily solve large, complex problems.
This post describes what it is like to be a programmer with ADD and some strategies I&#39;ve
developed to help make myself more effective.</p>

<p>To solve complex problems by programmatic means, one needs to be able to focus. To find
the best solution to any problem, one needs to be able to focus. In short, an effective
worker is one who can focus.</p>

<p>For those of us who live with the difficulties of AD(H)D every day, this fact - this
dependence upon a kind of mental discipline - is glaringly obvious. Our constant struggle
to focus means we are not as efficient as our non-ADD peers when asked to complete a
single task. We get distracted by the sound of the wind, the tap of a colleague&#39;s fingers
on his desk, or the sound of people talking walking past our window. The slightest noise
or change (by a separate entity) in the visual landscape will cause us to loose our train
of thought nearly immediately.</p>

<p>For those of you who can focus relatively easily in distracting environments, I offer this
metaphor to help you understand a bit more of how it is it live with such an affliction.
Imagine you are swimming in a lake with a basketball. The depth at which you swim is your
level of concentration - the deeper you swim, the more focused you are and thus the less
susceptible to distraction you are. Imagine further that a day&#39;s worth of work is like
swimming the length of the lake, and your goal is to swim as deeply as possible for as
far as possible. The problem is that you have to do all this while holding onto the
fully-inflated basketball. The longer you swim underwater, the harder it is to keep the
ball (and yourself) deep underwater. During your swim from one end of the lake to the
other, you are pulled up to the surface very frequently, only able to keep the ball
underground for a short while at a time. This is what it&#39;s like to live and work with ADD.</p>

<p>The inability to focus on a given problem for more than a few minutes at a time causes
severe problems for all employees with ADD, but especially for developers who have to
delve into a problem, process it, and produce a solution quickly and efficiently.</p>

<p>The effectiveness of various solutions will vary person to person, but these helped me:</p>

<ul>
<li>Find a quiet, solitary place to work (avoid working in a place where people socialize)</li>
<li>Turn off all notifications when working (fetch updates at will instead)</li>
<li>Play calm, simple music without words, or work in a place where the background noise
doesn&#39;t change</li>
<li>Keep the room cool in temperature</li>
<li>Work on one thing at a time and work until it is completed</li>
<li>Plan out finer details for a large project</li>
<li>Get enough sleep</li>
<li>Medicate with some sort of stimulant</li>
<li>Keep your workspace empty of clutter and visual distraction</li>
<li>Keep snacks by your desk (like almonds or dried fruits) to keep your energy up
throughout the day</li>
<li>Exercise to exhaustion at least every other day</li>
<li>Consciously avoid doing several things at once, like listening to a YouTube Lecture and
checking your Twitter feed on your phone at the same time</li>
<li>Avoid depressants like alcohol</li>
<li>Write or engage in a creative, exciting activity which asks for your full concentration</li>
</ul>

<p>Following all of these with ADD can even be a challenge, but limiting the frequency of
distracting stimuli goes a long way to achieving focus and increasing your productivity.</p>

<p>If you have other suggestions, hit me up on <a href="http://alpha.app.net/parkr">ADN</a> or
<a href="http://twitter.com/parkr">Twitter</a>. How do you cope with distractions?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby and Rails]]></title>
    <link href="http://blog.parkermoore.de/2012/06/25/ruby-and-rails/"/>
    <updated>2012-06-25T23:38:00-04:00</updated>
    <id>http://blog.parkermoore.de/2012/06/25/ruby-and-rails</id>
    <content type="html"><![CDATA[<p>So there&#39;s been a lot of hype about <a href="http://www.ruby-lang.org/en/">Ruby</a> over the past several years. For those of you who are interested in programming and programming languages, you heard about it right from the start, as its beautiful syntax and ease of use lured many programmers into its use.</p>

<p>While Ruby is wonderful, it wouldn&#39;t be what it is today without the existence of <a href="http://rubyonrails.org/">Ruby on Rails</a>. This web framework posed the first real threat to PHP. Rails was powerful and agile, and helped web devs create incredible web apps with incredible ease. The generators that came along with this gem made it possible to get a completely functional website up in a matter of <em>hours</em>, rather than days. That was incredible.</p>

<p>I used Rails on and off, switching between it and CakePHP. I didn&#39;t really understand Rails&#39; routes and wanted something like CakePHP&#39;s <code>bake</code> functionality which creates an entire scaffold with styling and everything. I didn&#39;t object to the un-RESTful CakePHP nature of using just <code>GET</code> and <code>POST</code> requests, as I didn&#39;t need the RESTful functionality for any of the sites I was creating. I used Rails for a couple projects, but it always felt like I was coding more than was necessary.</p>

<p>I started working at <a href="http://www.thinktopography.com">Think Topography</a> this summer and was tasked with building the new <a href="http://www.ithacahours.com">Ithaca Hours</a> mobile web app that would facilitate the use of Ithaca Hours. My boss had always used Rails and suggested that I use Rails for the API end of this project. It seemed like the best choice, given the requirements of the project, and so it began: I dove back into Rails.</p>

<p>Once I wrapped my head around routes and the devise/warden authentication framework, I was truckin&#39;. I was making huge progress on this API and learning gobs of information along the way. I was loving Rails and appreciating its incredible power. I was writing tests in rspec, which was a joy when combined with factory_girl.</p>

<p>I recently worked on a project for <a href="http://us.moet.com">Moët &amp; Chandon USA</a> that was built upon the CakePHP framework, and I was not nearly as excited about returning to this framework as I expected to be, given my incredible comfort with the language and the framework.</p>

<p>But my work at Think Topography has changed me -- I&#39;m a Rails guy for sure.</p>
]]></content>
  </entry>
  
</feed>
