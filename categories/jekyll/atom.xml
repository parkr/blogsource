<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jekyll | Hey, Iâ€™m Parker.]]></title>
  <link href="http://blog.parkermoore.de/categories/jekyll/atom.xml" rel="self"/>
  <link href="http://blog.parkermoore.de/"/>
  <updated>2016-12-09T19:14:32-05:00</updated>
  <id>http://blog.parkermoore.de/</id>
  <author>
    <name><![CDATA[Parker Moore]]></name>
    <email><![CDATA[parkrmoore@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Header Anchor Links in Vanilla JavaScript for GitHub Pages and Jekyll]]></title>
    <link href="http://blog.parkermoore.de/2014/08/01/header-anchor-links-in-vanilla-javascript-for-github-pages-and-jekyll/"/>
    <updated>2014-08-01T23:36:54-04:00</updated>
    <id>http://blog.parkermoore.de/2014/08/01/header-anchor-links-in-vanilla-javascript-for-github-pages-and-jekyll</id>
    <content type="html"><![CDATA[<p>The venerable <a href="http://ben.balter.com">Ben Balter, Esq.</a> wrote earlier this year about <a href="http://ben.balter.com/2014/03/13/pages-anchor-links/">how to add anchor links for headers in Jekyll.</a>. I thought I&#39;d follow up that post with one of my own, as I take a slightly different approach.</p>

<p>This solution is vanilla JavaScript with a little CSS and the Font Awesome web font.</p>

<h2>Font Awesome</h2>

<p><a href="http://fortawesome.github.io/Font-Awesome/">Font Awesome</a> is, well, awesome. It&#39;s a font of icons that comes with a handy set of CSS classes.</p>

<p>Download the Font Awesome distribution and pull out just the font files. They&#39;re the files that end in <code>.ttf</code>, <code>.woff</code>, <code>.svg</code>, <code>.otf</code>, and <code>.eot</code>. Grab them all and put them in <code>fonts/</code> in your Jekyll site.</p>

<h2>The JavaScript</h2>

<p>Add this JavaScript wherever is convenient:</p>

<p><div class="highlight"><pre><code class="js"><span class="kd">var</span> <span class="nx">anchorForId</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">var</span> <span class="nx">anchor</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;);</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">header</span><span class="o">-</span><span class="nx">link</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;;</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">href</span>      <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="err">#</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span> <span class="o">+</span> <span class="nx">id</span><span class="p">;</span>
  <span class="nx">anchor</span><span class="p">.</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">i</span> <span class="kr">class</span><span class="o">=</span><span class="err">\</span><span class="s2">"fa fa-link\"&gt;&lt;/i&gt;&amp;quot;;
  return anchor;
};&lt;/p&gt;

&lt;p&gt;var linkifyAnchors = function (level, containingElement) {
  var headers = containingElement.getElementsByTagName(&amp;quot;h&amp;quot; + level);
  for (var h = 0; h &amp;lt; headers.length; h++) {
    var header = headers[h];&lt;/p&gt;
&lt;div class="</span><span class="nx">highlight</span><span class="s2">"&gt;&lt;pre&gt;&lt;code class="</span><span class="nx">language</span><span class="o">-</span><span class="s2">" data-lang=""&gt;if (typeof header.id !== "</span><span class="kc">undefined</span><span class="s2">" &amp;amp;&amp;amp; header.id !== "</span><span class="err">"</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">header</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">anchorForId</span><span class="p">(</span><span class="nx">header</span><span class="p">.</span><span class="nx">id</span><span class="p">));</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="p">}</span>
<span class="p">};</span><span class="o">&lt;</span><span class="sr">/p</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nb">document</span><span class="p">.</span><span class="nx">onreadystatechange</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">complete</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">contentBlock</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">docs</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">||</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByClassName</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;</span><span class="nx">news</span><span class="o">&amp;</span><span class="nx">quot</span><span class="p">;)[</span><span class="mi">0</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">contentBlock</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">level</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">level</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">6</span><span class="p">;</span> <span class="nx">level</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">linkifyAnchors</span><span class="p">(</span><span class="nx">level</span><span class="p">,</span> <span class="nx">contentBlock</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">};</span></code></pre></div></p>

<h2>The CSS</h2>

<p>Last, add this CSS to the <code>css</code> or <code>_scss</code> folder:</p>

<p><div class="highlight"><pre><code class="css"><span class="o">/&lt;</span><span class="nt">em</span><span class="o">&gt;!</span>
 <span class="o">*</span>  <span class="nt">Font</span> <span class="nt">Awesome</span> <span class="nt">4</span><span class="nc">.1.0</span> <span class="nt">by</span> <span class="k">@davegandy</span> <span class="n">-</span> <span class="n">http</span><span class="p">://</span><span class="n">fontawesome</span><span class="p">.</span><span class="n">io</span> <span class="n">-</span> <span class="err">@</span><span class="n">fontawesome</span>
 <span class="err">*</span>  <span class="n">License</span> <span class="n">-</span> <span class="n">http</span><span class="p">://</span><span class="n">fontawesome</span><span class="p">.</span><span class="n">io</span><span class="p">/</span><span class="n">license</span> <span class="p">(</span><span class="n">Font</span><span class="p">:</span> <span class="n">SIL</span> <span class="n">OFL</span> <span class="m">1.1</span><span class="p">,</span> <span class="n">CSS</span><span class="p">:</span> <span class="n">MIT</span> <span class="n">License</span><span class="p">)</span>
 <span class="err">*</span><span class="p">/</span>
<span class="err">@</span><span class="n">font-face</span> <span class="p">{</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="err">&amp;</span><span class="m">#39</span><span class="p">;</span><span class="err">FontAwesome&amp;#39;;</span>
  <span class="nl">src</span><span class="p">:</span> <span class="sx">url(&amp;#39;../fonts/fontawesome-webfont.eot?v=4.1.0&amp;#39;)</span><span class="p">;</span>
  <span class="nl">src</span><span class="p">:</span> <span class="sx">url(&amp;#39;../fonts/fontawesome-webfont.eot?#iefix&amp;amp;v=4.1.0&amp;#39;)</span> <span class="n">format</span><span class="p">(</span><span class="err">&amp;</span><span class="m">#39</span><span class="p">;</span><span class="err">embedded-opentype&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.woff?v=4.1.0&amp;#39;)</span> <span class="err">format(&amp;#39;woff&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.ttf?v=4.1.0&amp;#39;)</span> <span class="err">format(&amp;#39;truetype&amp;#39;),</span> <span class="err">url(&amp;#39;../fonts/fontawesome-webfont.svg?v=4.1.0#fontawesomeregular&amp;#39;)</span> <span class="err">format(&amp;#39;svg&amp;#39;);</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">font-style</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.fa</span> <span class="p">{</span>
  <span class="nl">display</span><span class="p">:</span> <span class="n">inline-block</span><span class="p">;</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="n">FontAwesome</span><span class="p">;</span>
  <span class="nl">font-style</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="nb">normal</span><span class="p">;</span>
  <span class="nl">line-height</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
  <span class="nl">-webkit-font-smoothing</span><span class="p">:</span> <span class="n">antialiased</span><span class="p">;</span>
  <span class="nl">-moz-osx-font-smoothing</span><span class="p">:</span> <span class="n">grayscale</span><span class="p">;</span>
<span class="p">}</span>
<span class="nc">.fa-link</span><span class="nd">:before</span> <span class="p">{</span>
  <span class="nl">content</span><span class="p">:</span> <span class="err">&amp;</span><span class="n">quot</span><span class="p">;</span><span class="err">\f0c1&amp;quot;;</span>
<span class="p">}</span>
<span class="o">/&lt;/</span><span class="nt">em</span><span class="o">&gt;</span>
 <span class="o">*</span> <span class="nt">This</span> <span class="nt">code</span> <span class="nt">is</span> <span class="nt">courtesy</span> <span class="nt">Ben</span> <span class="nt">Balter</span><span class="o">,</span> <span class="nt">modified</span> <span class="nt">by</span> <span class="nt">Parker</span> <span class="nt">Moore</span> <span class="nt">for</span> <span class="nt">jekyllrb</span><span class="nc">.com</span>
 <span class="o">*</span> <span class="nt">http</span><span class="o">://</span><span class="nt">ben</span><span class="nc">.balter.com</span><span class="o">/</span><span class="nt">2014</span><span class="o">/</span><span class="nt">03</span><span class="o">/</span><span class="nt">13</span><span class="o">/</span><span class="nt">pages-anchor-links</span><span class="o">/</span>
 <span class="o">*/</span>
<span class="nc">.header-link</span> <span class="p">{</span>
  <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="nl">left</span><span class="p">:</span> <span class="m">0.5em</span><span class="p">;</span>
  <span class="nl">opacity</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="m">0.8em</span><span class="p">;</span><span class="err">&lt;/p&gt;</span>

<span class="err">&lt;p&gt;</span><span class="nl">-webkit-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
  <span class="nl">-moz-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
  <span class="nl">-ms-transition</span><span class="p">:</span> <span class="n">opacity</span> <span class="m">0.2s</span> <span class="n">ease-in-out</span> <span class="m">0.1s</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">h2</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h3</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h4</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h5</span><span class="nd">:hover</span> <span class="nc">.header-link</span><span class="o">,</span>
<span class="nt">h6</span><span class="nd">:hover</span> <span class="nc">.header-link</span> <span class="p">{</span>
  <span class="nl">opacity</span><span class="p">:</span> <span class="m">1</span><span class="p">;</span>
<span class="p">}</span></code></pre></div></p>

<h2>Enjoy the Magic</h2>

<p>Now refresh your site and voilÃ ! It&#39;s like magic. See it in action in the <a href="http://jekyllrb.com/docs/home/">Jekyll docs</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Hacker's Guide to Her Own GitHub Pages]]></title>
    <link href="http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages/"/>
    <updated>2014-08-01T14:42:58-04:00</updated>
    <id>http://blog.parkermoore.de/2014/08/01/how-to-setup-your-own-github-pages</id>
    <content type="html"><![CDATA[<p><a href="https://pages.github.com">GitHub Pages</a> is a wonderful free platform GitHub has created to build and host your Jekyll sites for you. You push up any valid Jekyll site to a repo (on a special branch), and it&#39;s built and published to a predictable URL. The only downside? You can&#39;t use any custom Ruby code, which means no custom plugins. So what&#39;s the best way to host a Jekyll site that requires plugins?</p>

<p>Maybe you&#39;re writing a huge website for your employer, or just something small for yourself. Either way, you need a plugin or two to get it <em>just right</em>. You could build locally and push the compiled site up to GitHub Pages, but that requires that you install all the dependencies locally and write a script to compile and jostle things in just the right way to make it all work. What if you could have the same workflow â€“ just <code>git push</code> â€“ for sites with custom plugins?</p>

<p>You can. I do it every day. In fact, my personal site (https://parkermoo.re) is published with this method. Here&#39;s a step-by-step guide to making your own GitHub Pages.</p>

<h2>1. Install and Configure Dependencies</h2>

<p>You&#39;ll need the following:</p>

<ol>
<li>A server with <code>root</code> access. I use a Rackspace CentOS 1GB Performance VM, but you can use any Linux system from any provider.</li>
<li>A web server if you don&#39;t have one already (Apache/Nginx).</li>
<li>Ruby and RubyGems with the proper permissions to install new gems.</li>
<li>Git</li>
<li><a href="https://github.com/sitaramc/gitolite">Gitolite</a></li>
</ol>

<p>First, <code>sudo su - root</code>. Then install Ruby. I suggest using <code>rbenv</code> to keep your Rubies organized. Then ensure RubyGems is installed, and install the <code>github-pages</code> gem.</p>

<p>Next, ensure you have a daemonized web server installed, like <code>nginx</code> or <code>apache</code>.</p>

<p>Then ensure git is installed and create a new <code>git</code> user. Run <code>su - git</code> and install <code>gitolite</code>.</p>

<p>Once you have <code>gitolite</code> installed, go back to your local machine and configure <code>gitolite</code> as described. You&#39;ll need to add a new user for your SSH key and create the repo for your site.</p>

<h2>2. Add the post-receive hook</h2>

<p>Run <code>sudo su - git</code> and find the <code>post-receive</code> file in your repository. It&#39;s usually at <code>/home/git/repositories/MY_REPO.git/hooks/post-receive</code>. Edit it so it looks like this:</p>

<p><div class="highlight"><pre><code class="bash"><span class="nb">set</span> -e <span class="c"># fail on error&lt;/p&gt;</span>

&lt;h1&gt;ensure you have loaded git&amp;#39;s environment with rbenv/ruby/jekyll <span class="k">in </span>the path&lt;/h1&gt;

&lt;p&gt;source /home/git/.bash_profile&lt;/p&gt;

&lt;h1&gt;this is only <span class="k">if </span>you have rbenv installed&lt;/h1&gt;

&lt;h1&gt;remove <span class="k">if </span>you&amp;#39;re using a stock ruby&lt;/h1&gt;

&lt;p&gt;eval &amp;quot;<span class="k">$(</span>rbenv init -<span class="k">)</span>&amp;quot;&lt;/p&gt;

&lt;h1&gt;this shows you where the Jekyll executable can be found&lt;/h1&gt;

&lt;h1&gt;it will also fail <span class="k">if </span>jekyll can&amp;#39;t be found, halting the build.&lt;/h1&gt;

&lt;p&gt;which jekyll&lt;/p&gt;

&lt;h1&gt;this is the name of your repo, without the &lt;code&gt;.git&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;REPO&lt;em&gt;NAME<span class="o">=</span>&amp;quot;MY&lt;/em&gt;REPO&amp;quot;&lt;/p&gt;

&lt;p&gt;GIT&lt;em&gt;REPO<span class="o">=</span><span class="nv">$HOME</span>/repositories/<span class="nv">$REPO</span>&lt;/em&gt;NAME.git
TMP&lt;em&gt;GIT&lt;/em&gt;CLONE<span class="o">=</span>/tmp/<span class="nv">$REPO_NAME</span>&lt;/p&gt;

&lt;h1&gt;Change this to wherever your server <span class="o">(</span>nginx/apache<span class="o">)</span> will look&lt;/h1&gt;

&lt;h1&gt;for your compiled site. Usually called the document root.&lt;/h1&gt;

&lt;p&gt;PUBLIC&lt;em&gt;WWW<span class="o">=</span>/var/www/<span class="nv">$REPO</span>&lt;/em&gt;NAME&lt;/p&gt;

&lt;p&gt;git clone <span class="nv">$GIT</span>&lt;em&gt;REPO <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE&lt;/p&gt;

&lt;h1&gt;Run Jekyll!&lt;/h1&gt;

&lt;p&gt;cd <span class="nv">$TMP</span>&lt;em&gt;GIT&lt;/em&gt;CLONE &amp;amp;&amp;amp; jekyll build -d <span class="nv">$PUBLIC</span>&lt;em&gt;WWW --trace
rm -Rf <span class="nv">$TMP</span>&lt;/em&gt;GIT_CLONE
<span class="nb">exit</span></code></pre></div></p>

<p>This hook will clone your repo to <code>/tmp</code> and run <code>jekyll build</code> from your site source into the directory your server will serve from.</p>

<h2>3. Add the git remote</h2>

<p>Go back to your local site and add the remote:</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git remote add publish git@example.org:MY_REPO.git</code></pre></div></p>

<h2>4. Test</h2>

<p>Now, to test, just push!</p>

<p><div class="highlight"><pre><code class="bash"><span class="gp">$ </span>git push publish master</code></pre></div></p>

<p>You should see all the output of the Jekyll process in your terminal. Once you see <code>...done.</code> and the process exits, you&#39;re done! Refresh your browser and admire your handiwork.</p>

<p>If you get a <code>LoadError</code> from Jekyll, then you don&#39;t have a gem installed or it can&#39;t access the <code>_plugins</code> directory. To install new gems, just run <code>gem install GEM_NAME</code> as <code>root</code> on your VM.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clearing Up Confusion Around baseurl]]></title>
    <link href="http://blog.parkermoore.de/2014/04/27/clearing-up-confusion-around-baseurl/"/>
    <updated>2014-04-27T16:52:54-04:00</updated>
    <id>http://blog.parkermoore.de/2014/04/27/clearing-up-confusion-around-baseurl</id>
    <content type="html"><![CDATA[<p><strong>TL;DR: Don&#39;t use baseurl. It&#39;ll drive you crazy.</strong></p>

<p>Hey, so there&#39;s been a bit of confusion about what the Jekyll configuration
option called <code>baseurl</code> is. Part of the beauty of open-source and of Jekyll
is that there&#39;s a lot of flexibility. Unfortunately, much of this
flexibility doesn&#39;t apply to <code>baseurl</code>. Here&#39;s a quick distillation of its
intentions, and how to use it.</p>

<h2>Mimic GitHub Pages</h2>

<p><code>baseurl</code> was <a href="https://github.com/jekyll/jekyll/commit/4a8fc1fa6e3fa5dc05c81ac5ac4ffed0b0818ac4">originally added back in 2010</a> to allow
&quot;the user to test the website with the internal webserver under the same
base url it will be deployed to on a production server&quot;.<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup> </p>

<h2>Example</h2>

<p>So let&#39;s say I come up with a cool new project. I want to make
documentation for a project I&#39;m working on called &quot;ubiqity&quot;, and I&#39;ll be
deploying it to GitHub Pages as a repo under my username, &quot;@parkr&quot;. Its
documentation will be available at the URL <code>http://parkr.github.io/ubiquity</code>.</p>

<p>In this example, the term &quot;base URL&quot; refers to <code>ubiquity</code>. When I go to
develop my website, I can set the <code>baseurl</code> key to equal <code>ubiquity</code> and
navigate my website from <code>http://localhost:4000/ubiquity/</code>, as though it
were hosted on GitHub Pages. Notice that the only difference here between
development and production is the host: <code>parkr.github.io</code> vs.
<code>localhost:4000</code>.<sup id="fnref2"><a href="#fn2" rel="footnote">2</a></sup></p>

<h2>Configuring Your Site Properly</h2>

<ol>
<li>Set <code>baseurl</code> in your <code>_config.yml</code> to match the production URL without
the host (e.g. <code>ubiquity</code>, <em>not</em> <code>http://parkr.github.io/ubiquity</code>).</li>
<li>Run <code>jekyll serve -w</code> and go to <code>http://localhost:4000/your_baseurl/</code>,
replacing <code>your_baseurl</code> with whatever you set <code>baseurl</code> to in your
<code>_config.yml</code>, and not forgetting the trailing slash.</li>
<li>Make sure everything works. Feel free to prepend your urls with
<code>site.baseurl</code>.</li>
<li>Push up to your host and see that everything works there, too!</li>
</ol>

<h2>Success!</h2>

<p>You&#39;ve done it! You&#39;ve successfully used <code>baseurl</code> and the world is
wonderful.</p>

<div class="footnotes">
<hr>
<ol>

<li id="fn1">
<p>https://github.com/jekyll/jekyll/pull/235&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

<li id="fn2">
<p>The port also differs, but that&#39;s not what&#39;s important here. The point is that everything after the <code>/</code> after the host is the same.&nbsp;<a href="#fnref2" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Taking Over Someone Else's Open-Source Project]]></title>
    <link href="http://blog.parkermoore.de/2013/11/04/taking-over-someone-elses-open-source-project/"/>
    <updated>2013-11-04T21:23:00-05:00</updated>
    <id>http://blog.parkermoore.de/2013/11/04/taking-over-someone-elses-open-source-project</id>
    <content type="html"><![CDATA[<p>Last December (2012), <a href="http://tom.preston-werner.com">Tom Preston-Werner</a> granted me <a href="/images/mojombo-added-parkr-to-jekyll.png">push &amp; pull access to
mojombo/jekyll</a>. I had written a <a href="/2012/12/11/an-open-letter-to-tom-preston-werner/">letter to Tom about the future of Jekyll</a>
and after a bit of persistence on my part, he relented:</p>

<p><img src="/images/mojombo-added-parkr-to-jekyll.png" alt="mojombo added parkr to mojombo/jekyll"></p>

<p>After a somewhat lengthy (and <a href="/images/jekyll-shall-inherit-the-earth.png">amusing</a>) conversation via Skype, I knew what
Tom&#39;s priorities were for the project and where I could help. I started off
trimming down the number of open issues. At the time, they numbered just over 300.
After a quick visit to Buffalo to tackle some issues with <a href="http://quaran.to">Nick Quaranto</a> at a
Buffalo <a href="http://openhack.github.io">OpenHack</a> meetup at <a href="http://coworkbuffalo.com">CoworkBuffalo</a>, we were down to fewer than 200
open issues. I continued to work through them (much to my parents&#39; dismay) all
through Winter Break. I was making good progress in the triage process: I knew
what many of the problems were with v0.12.1 and was formulating ideas about how
we might go about fixing them.</p>

<p><img src="/images/jekyll-shall-inherit-the-earth.png" alt="jekyll shall inherit the earth"></p>

<p>In January, I flew out to San Francisco to visit my sister for a week. I setup a
meeting with Tom to talk more about Jekyll and a plan for moving forward to a
v1.0.0 release. After about an hour or so at GitHub&#39;s office in SoMa, talking
through various PR&#39;s, Tom said I could start merging pull requests.</p>

<p>Consultation with Tom was challenging (he runs a multi-million dollar company
after all), as it was increasingly difficult for him to find time for Jekyll.
Despite <a href="https://github.com/mojombo/jekyll/issues/578#issuecomment-11414645">announcing that he was going to commit some of his &quot;20% time&quot; to Jekyll</a>,
he eventually abandoned that as impractical. As time went on, I received fewer
replies to my emails and eventually stopped sending anything that didn&#39;t
absolutely <em>require</em> Tom&#39;s input.</p>

<p>In March, I knew I needed more help. Tom wasn&#39;t able to give much time and I
was trying to tackle this project alone. I had noticed that <a href="http://mattr.info">Matt Rogers</a>
shared my vision for Jekyll, so I asked Tom to add him on as a contributor to
the repo. By v1.0.3, he had started merging pull requests like a BAW$ and was
the sanity to my ridiculously-obsessed, inexperienced mind. Since Matt joined, I
haven&#39;t really heard much from Tom. I write the occasional email and get the
occasional reply but he&#39;s essentially phased out of the normal development of
Jekyll. Matt &amp; I have essentially taken over the project altogether.</p>

<p>By May, we were ready to ship v1.0.0. With the help of all the amazing
contributors, Matt, and my many mentors along the way, I finally ran
<code>rake release</code> for 1.0. The project was ours.</p>

<p>Since realizing that this product has few constraints outside of those I&#39;ve
constructed for it in my mind (no one is going to tell me, &quot;No, you may not
implement that feature or add that enhancement&quot; without a valid argument as to
my solution&#39;s invalidity), I&#39;ve been thinking about what it means to take over
someone else&#39;s project. <a href="https://github.com/mojombo/jekyll/commit/d189e05d236769c1e5594af9db4d6eacb86fc16e">Jekyll is 5 years old.</a> I wasn&#39;t there in 2008 when
it was first born as <code>autoblog</code>. Jekyll has changed a lot, as has its vision and
purpose. It&#39;s used by lots of people now, whether via <a href="http://pages.github.com">GitHub Pages</a> or
locally.</p>

<p>Taking over someone else&#39;s project takes a deep understanding of what the
project is and what it should be. As much as I wish Jekyll could make me
krÃ¤uterquark, that&#39;s outside the scope of the project. Developing that lens is
crucial when taking over someone else&#39;s project.</p>

<p>Mentoring on the part of the original owner/previous maintainer(s) is
exceedingly significant in the development of this critical lens. I am so
grateful that I was able to meet up with Tom back in January and to have some
amount of input from him as I understood what the project should be.</p>

<p>It would be ill-advised to take over someone else&#39;s project without a partner.
Once Matt joined the team, Tom was able to step back into a much lesser role.
If I had tried to do what I did without any guidance (or at least sanity
checks), Jekyll v1.0.0 would have been a complete shit-show.</p>

<p>Trust in the community must also be earned. If people highly doubted my ability
to handle Jekyll, Tom would have likely removed me and found a replacement. I
argued a lot and got into some pretty heated debates at the beginning. There
were a couple people who didn&#39;t share the vision that I had inherited from Tom
and stopped contributing to the project altogether. I feel like we now have a
pretty great community around Jekyll and are able to help each other out and
share cool plugins and sites that we made for/with Jekyll.</p>

<p>Taking over someone else&#39;s open-source project was new terrain for me in
December, and still is today. It can be successful with the right amount of
mentoring and gradual removal of trusted feedback by the previous maintainer(s).</p>

<p>With some old projects that are brought back to life by the passing of the
torch, the new maintainers are able to experience the added bonus of feeling
like Frankenstein, which, I will say, is a pretty cool feeling.</p>

<p><img src="/images/it-lives.jpg" alt="igor"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jekyll 1.0 Released]]></title>
    <link href="http://blog.parkermoore.de/2013/05/06/jekyll-1-dot-0-released/"/>
    <updated>2013-05-06T00:59:00-04:00</updated>
    <id>http://blog.parkermoore.de/2013/05/06/jekyll-1-dot-0-released</id>
    <content type="html"><![CDATA[<p>Today, I&#39;m proud to announce the release of Jekyll 1.0. There are a million
goodies and fixes to enjoy, and we&#39;re (the still-active Jekyll core team
members: Tom, Matt and I) really excited to share this first major release
with you. Be sure to follow <a href="http://twitter.com/jekyllrb">@jekyllrb</a> for
updates on future releases and links to cool plugins.</p>

<p>Some quick highlights:</p>

<ul>
<li>New subcommands: new, build, serve, and import</li>
<li>Amazing new docs at http://jekyllrb.com (thanks to @cobyism)</li>
<li><code>jekyll new</code> creates a new scaffold so you can get blogging even faster</li>
<li>Drafts, i.e. posts without dates</li>
<li>New &quot;excerpt&quot; feature on posts</li>
<li>Timezone configuration</li>
<li>&#39;gist&#39; liquid tag</li>
<li>Source directory protection</li>
</ul>

<p>... and <a href="https://github.com/mojombo/jekyll/blob/v1.0.0/History.txt">so much more</a>!</p>

<p>We also have an <a href="http://jekyllrb.com/docs/upgrading/">Upgrading</a> page that clarifies
some breaking changes and tips for upgrading to Jekyll 1.0.</p>

<p>As many of you know, Jekyll lay mostly stagnant for quite some time. At 0.11.2 and
0.12.0, it was pretty stable. It had some annoying bugs, but nothing much that
couldn&#39;t be worked around or monkey-patched.</p>

<p>After using Jekyll last summer to help build
<a href="http://cals.cornell.edu">Cornell&#39;s College of Agriculture and Life Sciences website</a>,
I took a renewed interest in seeing this project move forward. Last December,
Tom answered my offers to help with the development of Jekyll by adding me as
a contributor. I&#39;m happy to say that it has come a long way since then, and
I&#39;m very proud to be a part of a team that has pushed this project to new heights.</p>

<p>Thank you to everyone who submitted a pull request, and/or gave me advice along
the way. It has been great fun so far, and I look forward to working with you
all to push out future versions!</p>
]]></content>
  </entry>
  
</feed>
